name: Build & Deploy Web Components

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn

    - name: Build web components
      run: yarn build:webcomponents

    - name: List generated files
      run: ls -la web-components-build/

    - name: Install rclone
      run: |
        curl https://rclone.org/install.sh | sudo bash

    - name: Configure rclone for Cloudflare R2
      run: |
        mkdir -p ~/.config/rclone
        cat <<EOF > ~/.config/rclone/rclone.conf
        [r2]
        type = s3
        provider = Cloudflare
        access_key_id = ${{ secrets.R2_ACCESS_KEY_ID }}
        secret_access_key = ${{ secrets.R2_SECRET_ACCESS_KEY }}
        endpoint = ${{ secrets.R2_ENDPOINT }}
        acl = public-read
        EOF

    - name: Upload new version file to Cloudflare R2
      run: |
        echo "Uploading entire build directory..."
        rclone copy web-components-build/ r2:/web-components/ \
        --s3-acl public-read \
        --header-upload "Cache-Control: max-age=31536000, immutable" \
        --progress \
        --retries 10 \
        --low-level-retries 20 \
        --s3-chunk-size 8M \
        --s3-upload-cutoff 8M
      
    - name: Upload new latest.js file to Cloudflare R2
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "Detected version: $VERSION"
        LATEST_FILE=$(find web-components-build -name "web-components-v*.js" -not -name "*.map" | head -n 1)
    
        if [ -n "$LATEST_FILE" ]; then
            echo "Deleting existing latest.js if it exists..."
            rclone deletefile r2:/web-components/latest.js || echo "latest.js did not exist, continuing"
    
            echo "Uploading $LATEST_FILE as latest.js..."
            rclone copyto "$LATEST_FILE" r2:/web-components/latest.js \
                --s3-acl public-read \
                --header-upload "Cache-Control: max-age=3600" \
                --progress \
                --retries 10 \
                --low-level-retries 20 \
                --s3-chunk-size 8M \
                --s3-upload-cutoff 8M
        else
            echo "No build file found for latest.js!"
            exit 1
        fi

    - name: Output deployment URL
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "Web components deployed to:"
        echo "Versioned: https://${{ vars.R2_PUBLIC_DOMAIN }}/web-components/web-components-v${VERSION}.js"
        echo "Latest: https://${{ vars.R2_PUBLIC_DOMAIN }}/web-components/latest.js"
